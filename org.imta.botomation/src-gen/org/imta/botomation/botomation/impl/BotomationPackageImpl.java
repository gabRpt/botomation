/**
 * generated by Xtext 2.32.0
 */
package org.imta.botomation.botomation.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.imta.botomation.botomation.Action;
import org.imta.botomation.botomation.Botomation;
import org.imta.botomation.botomation.BotomationFactory;
import org.imta.botomation.botomation.BotomationPackage;
import org.imta.botomation.botomation.Browser;
import org.imta.botomation.botomation.VerifyPageContains;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BotomationPackageImpl extends EPackageImpl implements BotomationPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass botomationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass browserEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass actionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass verifyPageContainsEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.imta.botomation.botomation.BotomationPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private BotomationPackageImpl()
  {
    super(eNS_URI, BotomationFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link BotomationPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static BotomationPackage init()
  {
    if (isInited) return (BotomationPackage)EPackage.Registry.INSTANCE.getEPackage(BotomationPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredBotomationPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    BotomationPackageImpl theBotomationPackage = registeredBotomationPackage instanceof BotomationPackageImpl ? (BotomationPackageImpl)registeredBotomationPackage : new BotomationPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theBotomationPackage.createPackageContents();

    // Initialize created meta-data
    theBotomationPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theBotomationPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(BotomationPackage.eNS_URI, theBotomationPackage);
    return theBotomationPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBotomation()
  {
    return botomationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBrowser()
  {
    return browserEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBrowser_Actions()
  {
    return (EReference)browserEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBrowser_Name()
  {
    return (EAttribute)browserEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAction()
  {
    return actionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAction_OpenURL()
  {
    return (EAttribute)actionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAction_VerifyPageContains()
  {
    return (EReference)actionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVerifyPageContains()
  {
    return verifyPageContainsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVerifyPageContains_Type()
  {
    return (EAttribute)verifyPageContainsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVerifyPageContains_Target()
  {
    return (EAttribute)verifyPageContainsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BotomationFactory getBotomationFactory()
  {
    return (BotomationFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    botomationEClass = createEClass(BOTOMATION);

    browserEClass = createEClass(BROWSER);
    createEReference(browserEClass, BROWSER__ACTIONS);
    createEAttribute(browserEClass, BROWSER__NAME);

    actionEClass = createEClass(ACTION);
    createEAttribute(actionEClass, ACTION__OPEN_URL);
    createEReference(actionEClass, ACTION__VERIFY_PAGE_CONTAINS);

    verifyPageContainsEClass = createEClass(VERIFY_PAGE_CONTAINS);
    createEAttribute(verifyPageContainsEClass, VERIFY_PAGE_CONTAINS__TYPE);
    createEAttribute(verifyPageContainsEClass, VERIFY_PAGE_CONTAINS__TARGET);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    browserEClass.getESuperTypes().add(this.getBotomation());

    // Initialize classes and features; add operations and parameters
    initEClass(botomationEClass, Botomation.class, "Botomation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(browserEClass, Browser.class, "Browser", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBrowser_Actions(), this.getAction(), null, "actions", null, 0, -1, Browser.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBrowser_Name(), ecorePackage.getEString(), "name", null, 0, 1, Browser.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(actionEClass, Action.class, "Action", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAction_OpenURL(), ecorePackage.getEString(), "openURL", null, 0, 1, Action.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAction_VerifyPageContains(), this.getVerifyPageContains(), null, "verifyPageContains", null, 0, 1, Action.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(verifyPageContainsEClass, VerifyPageContains.class, "VerifyPageContains", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVerifyPageContains_Type(), ecorePackage.getEString(), "type", null, 0, 1, VerifyPageContains.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getVerifyPageContains_Target(), ecorePackage.getEString(), "target", null, 0, 1, VerifyPageContains.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //BotomationPackageImpl
