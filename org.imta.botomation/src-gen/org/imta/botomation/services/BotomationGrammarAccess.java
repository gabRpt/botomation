/*
 * generated by Xtext 2.32.0
 */
package org.imta.botomation.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class BotomationGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class BotomationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.imta.botomation.Botomation.Botomation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBotomationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cBrowserParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cActionsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cActionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cActionsActionParserRuleCall_3_0 = (RuleCall)cActionsAssignment_3.eContents().get(0);
		
		//Botomation:
		//    'botomation' Browser 'actions' actions+=Action*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'botomation' Browser 'actions' actions+=Action*
		public Group getGroup() { return cGroup; }
		
		//'botomation'
		public Keyword getBotomationKeyword_0() { return cBotomationKeyword_0; }
		
		//Browser
		public RuleCall getBrowserParserRuleCall_1() { return cBrowserParserRuleCall_1; }
		
		//'actions'
		public Keyword getActionsKeyword_2() { return cActionsKeyword_2; }
		
		//actions+=Action*
		public Assignment getActionsAssignment_3() { return cActionsAssignment_3; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_3_0() { return cActionsActionParserRuleCall_3_0; }
	}
	public class BrowserElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.imta.botomation.Botomation.Browser");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBrowserKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameBROWSERNAMETerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Browser:
		//    'browser' name=BROWSERNAME;
		@Override public ParserRule getRule() { return rule; }
		
		//'browser' name=BROWSERNAME
		public Group getGroup() { return cGroup; }
		
		//'browser'
		public Keyword getBrowserKeyword_0() { return cBrowserKeyword_0; }
		
		//name=BROWSERNAME
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//BROWSERNAME
		public RuleCall getNameBROWSERNAMETerminalRuleCall_1_0() { return cNameBROWSERNAMETerminalRuleCall_1_0; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.imta.botomation.Botomation.Action");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cOpenURLKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cOpenURLAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOpenURLSTRINGTerminalRuleCall_0_1_0 = (RuleCall)cOpenURLAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cVerifyPageContainsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cVerifyPageContainsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cVerifyPageContainsVerifyPageContainsParserRuleCall_1_1_0 = (RuleCall)cVerifyPageContainsAssignment_1_1.eContents().get(0);
		
		//Action:
		//    (
		//        ('openURL' openURL=STRING) &
		//        ('verifyPageContains' verifyPageContains=VerifyPageContains)
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(
		//    ('openURL' openURL=STRING) &
		//    ('verifyPageContains' verifyPageContains=VerifyPageContains)
		//)
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('openURL' openURL=STRING)
		public Group getGroup_0() { return cGroup_0; }
		
		//'openURL'
		public Keyword getOpenURLKeyword_0_0() { return cOpenURLKeyword_0_0; }
		
		//openURL=STRING
		public Assignment getOpenURLAssignment_0_1() { return cOpenURLAssignment_0_1; }
		
		//STRING
		public RuleCall getOpenURLSTRINGTerminalRuleCall_0_1_0() { return cOpenURLSTRINGTerminalRuleCall_0_1_0; }
		
		//('verifyPageContains' verifyPageContains=VerifyPageContains)
		public Group getGroup_1() { return cGroup_1; }
		
		//'verifyPageContains'
		public Keyword getVerifyPageContainsKeyword_1_0() { return cVerifyPageContainsKeyword_1_0; }
		
		//verifyPageContains=VerifyPageContains
		public Assignment getVerifyPageContainsAssignment_1_1() { return cVerifyPageContainsAssignment_1_1; }
		
		//VerifyPageContains
		public RuleCall getVerifyPageContainsVerifyPageContainsParserRuleCall_1_1_0() { return cVerifyPageContainsVerifyPageContainsParserRuleCall_1_1_0; }
	}
	public class VerifyPageContainsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.imta.botomation.Botomation.VerifyPageContains");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cTypeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cTypeTYPETerminalRuleCall_0_1_0 = (RuleCall)cTypeAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cTargetKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTargetAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTargetSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cTargetAssignment_1_1.eContents().get(0);
		
		//VerifyPageContains:
		//    (
		//        ('type' type=TYPE) &
		//        ('target' target=STRING)
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(
		//    ('type' type=TYPE) &
		//    ('target' target=STRING)
		//)
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('type' type=TYPE)
		public Group getGroup_0() { return cGroup_0; }
		
		//'type'
		public Keyword getTypeKeyword_0_0() { return cTypeKeyword_0_0; }
		
		//type=TYPE
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }
		
		//TYPE
		public RuleCall getTypeTYPETerminalRuleCall_0_1_0() { return cTypeTYPETerminalRuleCall_0_1_0; }
		
		//('target' target=STRING)
		public Group getGroup_1() { return cGroup_1; }
		
		//'target'
		public Keyword getTargetKeyword_1_0() { return cTargetKeyword_1_0; }
		
		//target=STRING
		public Assignment getTargetAssignment_1_1() { return cTargetAssignment_1_1; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_1_1_0() { return cTargetSTRINGTerminalRuleCall_1_1_0; }
	}
	
	
	private final BotomationElements pBotomation;
	private final BrowserElements pBrowser;
	private final ActionElements pAction;
	private final VerifyPageContainsElements pVerifyPageContains;
	private final TerminalRule tTYPE;
	private final TerminalRule tBROWSERNAME;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public BotomationGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pBotomation = new BotomationElements();
		this.pBrowser = new BrowserElements();
		this.pAction = new ActionElements();
		this.pVerifyPageContains = new VerifyPageContainsElements();
		this.tTYPE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.imta.botomation.Botomation.TYPE");
		this.tBROWSERNAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.imta.botomation.Botomation.BROWSERNAME");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.imta.botomation.Botomation".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Botomation:
	//    'botomation' Browser 'actions' actions+=Action*
	//;
	public BotomationElements getBotomationAccess() {
		return pBotomation;
	}
	
	public ParserRule getBotomationRule() {
		return getBotomationAccess().getRule();
	}
	
	//Browser:
	//    'browser' name=BROWSERNAME;
	public BrowserElements getBrowserAccess() {
		return pBrowser;
	}
	
	public ParserRule getBrowserRule() {
		return getBrowserAccess().getRule();
	}
	
	//Action:
	//    (
	//        ('openURL' openURL=STRING) &
	//        ('verifyPageContains' verifyPageContains=VerifyPageContains)
	//    )
	//;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//VerifyPageContains:
	//    (
	//        ('type' type=TYPE) &
	//        ('target' target=STRING)
	//    )
	//;
	public VerifyPageContainsElements getVerifyPageContainsAccess() {
		return pVerifyPageContains;
	}
	
	public ParserRule getVerifyPageContainsRule() {
		return getVerifyPageContainsAccess().getRule();
	}
	
	//terminal TYPE: ('link'|'text');
	public TerminalRule getTYPERule() {
		return tTYPE;
	}
	
	//terminal BROWSERNAME: ('chrome'|'firefox'|'opera'|'safari');
	public TerminalRule getBROWSERNAMERule() {
		return tBROWSERNAME;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
